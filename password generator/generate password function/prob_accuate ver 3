var uppercaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
var lowercaseLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
var symbols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '=', '+', '[', ']', '{', '}', ';', ':', ',', '.', '/', '?', '|'];
var numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];

var pool = [];   //2D_pool
var len = 4; //length of pw
var setting = [1,1,1,1] //pw setting
var count = [0,0,0,0];//count which group is used in pw
var output="";//output pw

//push to the 2D_pool
pool.push(uppercaseLetters);
pool.push(lowercaseLetters);
pool.push(symbols);
pool.push(numbers);

var find_set = 0;
for(let k=0; k < 4; k++){
  if(setting[k] === 1){
    find_set++;
  }
}

//by default find_count has to be 4 (all is 0 when no password is generated yet)
var find_count = 0;
var index = 0;
var pool_length = pool[0].length + pool[1].length + pool[2].length + pool[3].length;

while (len !== 0){
    //generated random number from pool_2
    a=Math.floor((Math.random()*pool_length)); 
    for(let i =0; i < 4;i++){
        if(pool[i].length > a ){ //know the index place
            index = i;
            break;
        }
        a-=pool[i].length; //deduce the one of the length of 2D array, if >= then the random number is located in pool_1[i]
    }
    
    if(len === find_set - find_count && count[index] !== 0 || setting[index] === 0){
        
    }
    else{
        output+=pool[index][a];
        count[index]++;
        len--;
    }
    
    find_count = 0;
    for(let k=0; k < 4; k++){
        if(count[k]>0){
            find_count++;
        }
    }
}
console.log('output:' + output);